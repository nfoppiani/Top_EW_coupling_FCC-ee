from ROOT import TFile, TH2D
import numpy

myfile_mc = TFile("2dWhizardLeptonsHisto.root","READ")
myfile_sm = TFile("SMCrossSection.root","READ")

hElectron=TH2D("electronSMRatio","Ratio between Monte Carlo and SM expected cross sections for the electrons",40,0.,1.4,30,-1.,1.)
hPositron = TH2D("positronSMRatio", "Ratio between Monte Carlo and SM expected cross sections for the positrons (cosine*-1)", 40, 0., 1.4, 30, -1., 1.)
hLightLeptons = TH2D("lightLeptonsSMRatio", "Ratio between Monte Carlo and SM expected cross sections for the first generation leptons (cosine*-1 for the positrons)", 40, 0., 1.4, 30, -1., 1.)
hPositiveMuon = TH2D("positiveMuonsSMRatio", "Ratio between Monte Carlo and SM expected cross sections for the positive muons (cosine*-1)", 40, 0., 1.4, 30, -1., 1.)
hNegativeMuon = TH2D("negativeMuonsSMRatio", "Ratio between Monte Carlo and SM expected cross sections for the negative muons", 40, 0., 1.4, 30, -1., 1.)
hMuon = TH2D("muonsSMRatio", "Ratio between Monte Carlo and SM expected cross sections for the muons (cosine*-1 for the positive ones)", 40, 0., 1.4, 30, -1., 1.)
hPositiveTau = TH2D("positiveTausSMRatio", "Ratio between Monte Carlo and SM expected cross sections for the positive taus (cosine*-1)", 40, 0., 1.4, 30, -1., 1.)
hNegativeTau = TH2D("negativeTausSMRatio", "Ratio between Monte Carlo and SM expected cross sections for the negative taus", 40, 0., 1.4, 30, -1., 1.)
hTau = TH2D("tausSMRatio", "Ratio between Monte Carlo and SM expected cross sections for the taus (cosine*-1 for the positive ones)", 40, 0., 1.4, 30, -1., 1.)
hPositiveLeptons = TH2D("positiveLeptonsSMRatio", "Ratio between Monte Carlo and SM expected cross sections for the positive leptons (cosine*-1)", 40, 0., 1.4, 30, -1., 1.)
hNegativeLeptons = TH2D("negativeLeptonsSMRatio", "Ratio between Monte Carlo and SM expected cross sections for the negative leptons", 40, 0., 1.4, 30, -1., 1.)
hLeptons = TH2D("leptonsSMRatio", "Ratio between Monte Carlo and SM expected cross sections for the leptons (cosine*-1 for the positive ones", 40, 0., 1.4, 30, -1., 1.)

h_standardModel=TH2D(""," ",40,0.,1.4,30,-1.,1.)

hElectron = myfile_mc.Get("electronReducedEnergyAndAngleHisto")
hPositron = myfile_mc.Get("positronReducedEnergyAndAngleHisto")
hLightLeptons = myfile_mc.Get("lightLeptonsReducedEnergyAndAngleHisto")
hPositiveMuon= myfile_mc.Get("positiveMuonReducedEnergyAndAngleHisto")
hNegativeMuon= myfile_mc.Get("negativeMuonReducedEnergyAndAngleHisto")
hMuon= myfile_mc.Get("muonsReducedEnergyAndAngleHisto")
hPositiveTau= myfile_mc.Get("positiveTauReducedEnergyAndAngleHisto")
hNegativeTau= myfile_mc.Get("negativeTauReducedEnergyAndAngleHisto")
hTau= myfile_mc.Get("tauReducedEnergyAndAngleHisto")
hPositiveLeptons= myfile_mc.Get("positiveLeptonsReducedEnergyAndAngleHisto")
hNegativeLeptons= myfile_mc.Get("negativeLeptonsReducedEnergyAndAngleHisto")
hLeptons= myfile_mc.Get("leptonsReducedEnergyAndAngleHisto")
h_standardModel = myfile_sm.Get("smcross")

hElectron.Divide(h_standardModel)
hPositron.Divide(h_standardModel)
hLightLeptons.Divide(h_standardModel)
hPositiveMuon.Divide(h_standardModel)
hNegativeMuon.Divide(h_standardModel)
hMuon.Divide(h_standardModel)
hPositiveTau.Divide(h_standardModel)
hNegativeTau.Divide(h_standardModel)
hTau.Divide(h_standardModel)
hPositiveLeptons.Divide(h_standardModel)
hNegativeLeptons.Divide(h_standardModel)
hLeptons.Divide(h_standardModel)

savingFile = TFile("./compareWithSM.root", "CREATE")
hPositron.Write()
hElectron.Write()
hLightLeptons.Write()
hPositiveMuon.Write()
hNegativeMuon.Write()
hMuon.Write()
hPositiveTau.Write()
hNegativeTau.Write()
hTau.Write()
hPositiveLeptons.Write()
hNegativeLeptons.Write()
hLeptons.Write()
savingFile.Close()
